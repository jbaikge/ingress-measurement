package main

import (
	"bytes"
	"testing"
)

func TestOTP(t *testing.T) {
	str := []byte("TWOXOXCLOCKXFOURXMINUTESXANDXTHIRTYXEIGHTXSECONDS")
	otp := []byte("ZPCDKCAPANHLJTXFBNZEJOHZELDOJPOLPVGLXNMLPBKPNPBQJ")
	enc := []byte("SLQAYZCAOPRIOHRWYZHRDHLRBLQRGIVTGOEIBVSSIYCTPDOTB")

	if c := OTP(str, enc); !bytes.Equal(c, otp) {
		t.Logf("Expected %s", otp)
		t.Logf("Got      %s", c)
		t.Fatal("Mismatch")
	}
}

func TestDistance(t *testing.T) {
	o := [][]byte{
		[]byte("SLQAYZCAOPRIOHRWYZHRDHLRBLQRGIVTGOEIBVSSIYCTPDOTB"),
		[]byte("TWOXOXCLOCKXFOURXMINUTESXANDXTHIRTYXEIGHTXSECONDS"),
		[]byte("SUZGNEKXBNORVSNVEACAVDHFYXZGDWPISLOVOXLAGESFLAMAN"),
		[]byte("XTHREEXOXXCLOCKXONEXMINUTEXANDXFIFTYXFIVEXSECONDS"),
		[]byte("LNGFOVHMJXMLGXRIJLOZMHRRONBHHQLZJUQXVUWQRUJASQOKR"),
		[]byte("XFOURXOXXCLOCKXXTHREEXXMINUTESXANDXTWENTYXSECONDS"),
		[]byte("PHPUHTXFJZCQPKVACWBDSZTVAJKLEWGKVPYQXFGKMWWJYDJZF"),
		[]byte("FIVEXOXCLOCKXTWOXMINUTESXANDXTWENTYXSEVENXSECONDS"),
		[]byte("ZJMXUEFMHIHGXHURAHTTOCRBWAACZCARFWOSWSSGAZBDGPBJBICRCVPWAND"),
		[]byte("ONEXXMINUTEXXXTHIRTYXFOURXXSECONDSXXXPASTXXONEXXOXXCLOCKXXX"),
		[]byte("VJUCHIYAIVIYYCPXYGTJOBZDCDNMLZJYJRDAUYZICNQRQTNUWKHZDUDHOTB"),
		[]byte("XXTWOXXOXXCLOCKXANDXFOURXXMINUTESXXANDXFIFTYXFIVEXSECONDSXX"),
		[]byte("UNJJOEHVXHUKIXZFSNQFNSOIWIFODFGHTOORTFNQLGLSQESZWICVQYYSSGY"),
		[]byte("XXXTHREEXXMINUTESXXXFIFTYXTWOXXSECONDSXPASTXTHREEXOXCLOCKXX"),
		[]byte("QOYZGKWCODDSQXJMYEZVSNYWAMSCNCYOUMDAUFHQOWLDCPFZTRVPGDRUEMX"),
		[]byte("XXFIFTYXXFIVEXSECONDSXXXANDXXXTHREEXXMINUTESXXAFTERXXXSEVEN"),
		[]byte("MZPGMGYBVTWXUYIRCURRIWYCDAQEPGVRSHNKNFHIDCHREZFBEFEQFMPGDCV"),
		[]byte("XXEIGHTXOXCLOCKXXXTWOXXMINUTESXANDXXXFIFTYXXXFOURXXXSECONDS"),
		[]byte("EXBAJBQTNJMMZYZNURBTPMRUWSYRUZMALZKSZETLGOBNWIHVKYZHGKGYNDN"),
		[]byte("MEASUREMENTXTHREEXXISXXATXXNINEXXOXTHREEXANDXTHIRTYXSECONDS"),
		[]byte("LSEFLMCXCDNLEBGOLTAAGUDKJJIEQYLREGGHVHSXDNZAQGJGVSZAWZPVUBX"),
		[]byte("XXSIXXXOXXCLOCKXANDXXFOURXMINUTESXXANDXXTHIRTEENXXXSECONDSX"),
		[]byte("DPZDDKNEEJUPKNILMNSWYZWGSAREHNQSDAGSIKLPLAUSXYVTHIMVKNCLUOG"),
		[]byte("XXXXXTHIRTEENXXSECONDSXXXPASTXXXXSEVENXXOXXCLOCKXXXSHARPXXX"),
		[]byte("QOQUAEMANBBXGRTRGNYMAUJOFZFJPTVTYSZEUHIMAMGMCQLAYMEXQELFGJZ"),
		[]byte("XXXTWOXMINUTESXXXXANDXSEVENXXXXSECONDSXXXPASTXXEIGHTXXXPMXX"),
		[]byte("DZMWLIPRIVLOBSUPJMEDOIXWXQASQKYIXUXOYYSSFINOICBLPTEELJDWCSJ"),
		[]byte("XTWOXOXXCLOCKXXXTHREEXXMINUTESXANDXXFIFTYXXXTWOXXXXXSECONDS"),
		[]byte("ROOIAYSGNONDTWUKTMCAAVRNAGNSVSLPQYRFDCZETHSXIMWSINTTVXCZQAU"),
		[]byte("XONEXXMINUTEXXANDXTHIRTYXXONEXXSECONDSXPASTXXTHREEXXOXCLOCK"),
		[]byte("PRVMUNJBGIDPPJMRACDAHMQPPMVNTHTHUYZWCYQOAPFXUZHOFHNZUXWFVRC"),
		[]byte("XXXTHIRTYXXXSIXXSECONDSXPASTXXXXFOURXOXXXXCLOCKXXXXXSHARPXX"),
		[]byte("FLKZEEDLZHQFTMVGVYUAIXVNRNPBIARBKAKJYFBMCMDHRZFROJKOMQFINTG"),
		[]byte("XXXFOURXXMINUTESXXXELEVENXXXSECONDSXXAFTERXFIVEXOXXXXCLOCKX"),
		[]byte("JNMWGOKNDYRPVMGOXRWXPJIJQUPGYPVFQPROVQROSEJVJZZHOQNTQLQBKMZ"),
		[]byte("XXXFOURTYXXSEVENXXSECONDSXXXANDXTWOXXMINUTESXPASTXXTWOXXPMX"),
		[]byte("JNQBFCORXNLVEDEOLZRZNMHGFIZMLJXMUTIPCXVDSLXOGDYTBNJNLNCTMGH"),
		[]byte("XXXTHREEXXXXOXXXXFOURXXXXANDXXXXXXTWOXXXXXXXXXSECONDSXXXXXX"),
		[]byte("CVQPBUTQQNOFEWUFHSRTGFKNISVHGJUPGFFDRSHZGARWXMAEZDYCSUODJXN"),
		[]byte("XXXXXFOURXXOXXXXXXCLOCKXXXANDXXXXFOURTYXXXXSIXXXXXXSECONDSX"),
		[]byte("RFPPVITBLWYUHVAPIICWYTHSQIDRBJRAKVYNCJXAURZMREAWINDBKVLVUPL"),
		[]byte("XXXFIVEXXXOXXXTHREEXXXXXANDXXXXTWENTYXXXXXSIXXXSECONDSXXXXX"),
		[]byte("GVBKOVXCZEEQULAUXSMAIBVAZLXCAKJHGLGBSKCAYHLBQFHSCRPIFMUEGZZ"),
		[]byte("XXXONEXXXOXXCLOCKXXXFOURXMINUTESXXFIFTYXXEIGHTXXXSECONDSXXX"),
		[]byte("NKOJGKSYYAAMVOMRMFUDNGZVWIIIDMNIXRBZVSWIQMLQIJBWEHDLZZVLMZX"),
		[]byte("XXXTWOXXXMINUTESXXXXFIFTYXXEIGHTXXXSECONDSXPASTXXXTWOXPMXXX"),
		[]byte("IMTBQANVGYPXXOPSJUWEMBUOQWSOKOROLRGKNFJIHWHFSFVVOJSJHCUPORU"),
		[]byte("XXXTHIRTEENXXXSECONDSXXXANDXTHREEXMINUTESXXXPASTXXXTHREEXPM"),
		[]byte("VHAZKCXSDWUETLPDVYIQPTQTZRLLRDQTAPCMMAMNCQROTRTDTQWHMXRTUSV"),
		[]byte("XXXXXSEVENOCLOCKXANDXTHREEXMINUTESXXXXXANDXTHIRTYFIVEXSECXX"),
		[]byte("NNFNACPYIRXJPOIOFXHMNGNGACBWBBUHCSYNXLSDWKZWYAYVKELQUWPENRU"),
		[]byte("XXXXXXEIGHTXOXTHREEXANDXXXXXXXXXTHIRTYXXXXFIVEXSECONDSXXXXX"),
		[]byte("TEGFCBNQIBOMUILMJTOINEHVIHXJPSLRTYBQKVNXXABWFNVVXUPPDLQNDSG"),
		[]byte("XXTHIRTYXFIVEXSECONDSXANDXONEXMINUTEXPASTXXXXXXNINEXXXXXXXX"),
	}
	for i := 0; i < len(o); i += 2 {
		otp := OTP(o[i+1], o[i])
		dist := make([]int, len(otp))
		sum := 0
		for j := 0; j < len(dist); j++ {
			dist[j] = (int(o[i][j]) - int(o[i+1][j]) + 26) % 26
			sum += int(o[i][j]) - int(o[i+1][j])
		}
		t.Logf("%s", otp)
		t.Logf("%2v", dist)
		t.Logf("%d", sum)
	}
}
